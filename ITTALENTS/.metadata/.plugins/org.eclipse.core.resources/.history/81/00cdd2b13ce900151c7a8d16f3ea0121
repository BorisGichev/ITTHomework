package speedy;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import exceptions.PackException;
import speedy.Client;

public class Pack {
	private static int Id=1;
	private Client sender;
	private Client reciever;
	private Client worker;
	private boolean isDelivered=false;
	private String content;
	private LocalDateTime timeTaken;
	private int uniqueId;
	List<Protocol> packProtocols;
	
	
	public Pack(Client sender, Client reciever,String content) {
		this.sender = sender;
		this.reciever = reciever;
		this.setContent(content);;
		this.packProtocols = new ArrayList<Protocol>();
		
	}
	
	public void addProtocol(Protocol protocol){
		packProtocols.add(protocol);
	}

	public Client getWorker() {
		return worker;
	}

	public void setWorker(WorkerClient employee) {
		this.worker = employee;
	}

	public boolean isDelivered() {
		return isDelivered;
	}

	public void setDelivered(boolean isDelivered) {
		this.isDelivered = isDelivered;
	}

	public LocalDateTime getTimeTaken() {
		return timeTaken;
	}

	public void setTimeTaken(LocalDateTime timeTaken) {
		this.timeTaken = timeTaken;
	}
	

	public Client getSender() {
		return sender;
	}

	public Client getReciever() {
		return reciever;
	}

	public String getContent() {
		return content;
	}

	public void setContent(String content) {
		if (content!=null&&content.trim().length()!=0) {
			this.content = content;
		}
		else{
			try {
				throw new PackException("invalid content");
			} catch (PackException e) {
				e.printStackTrace();
			}
		}
	}

	public int getUniqueId() {
		return uniqueId;
	}
	
	public void setUniqueId() {
		if (this.uniqueId==0) {
			this.uniqueId=Pack.Id++;
		}
		else{
			try {
				throw new PackException("Pack already has an ID");
			} catch (PackException e) {
				e.printStackTrace();
			}
		}
		
	}

	@Override
	public String toString() {
		StringBuilder info=new StringBuilder("From ="+this.getSender().toString()+", to ="+this.getReciever().toString());
		if (isDelivered) {
			info.append("\nThe package is given to the receiver ");
			return info.toString();
		}
		info.append("Now tha package is in worker"+this.getWorker().toString());
		
		return info.toString();
	}

}